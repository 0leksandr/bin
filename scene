#!/bin/bash
set -e

daytime_file="$(realpath ~/_/localhost/http-server/daytime.txt)"
calc_ranges() {
    astro="$(hdate -s -l N50 -L E30 -z3 2>/dev/null)"
    when () { echo "$astro" |grep "$1" |sed -r "s/^.*$1: ([0-9]{2}:[0-9]{2}).*$/\1/" ;}

    day="$(date -d $(when sunrise) +%s)"
    twilight="$(( $(date -d $(when sunset) +%s) - 30*60 ))"
    evening="$(( $(date -d $(when sunset) +%s) + 30*60 ))"
    night="$(date -d 22:30 +%s)"
}

case "$1" in
    day|twilight|evening|night) echo "$1" > "$daytime_file" ;;
    movie)
        prev="$($0 actual)"
        bulb movie
        brightness
        while ! _external-display-connected; do sleep 1; done
        sleep 2
        brightness 0.5
        while _external-display-connected; do sleep 1; done
        if [ "$($0 which)" = "$prev" ]; then
            $0 light "$prev"
        fi
        ;;
    actual) cat "$daytime_file" ;;
    when)
        calc_ranges
        for daytime in day twilight evening night; do
            echo "$daytime: $(date -d @${!daytime} +%H:%M)"
        done
        printf "\nsunset: $(when sunset)\n"
        ;;
    which)
        calc_ranges

        now=$(date +%s)
        function between {
            if [ $1 -le $now ] && [ $now -lt $2 ]; then
                return 0
            else
                return 1
            fi
        }
        if between $day $twilight ; then
            echo "day"
        elif between $twilight $evening ; then
            echo "twilight"
        elif between $evening $night ; then
            echo "evening"
        else
            echo "night"
        fi
        ;;
    update)
        prev=""
        while :; do
            if _external-display-connected; then
                sleep 10
                continue
            fi

            daytime=$($0 which)

            if [ "$daytime" != "$prev" ]; then
                prev="$daytime"
                echo "$daytime" > "$daytime_file"
            fi

            sleep 1
        done
        ;;
    server)
        dir="$(dirname "$daytime_file")"

        # pkill http-server  # kills innocents
        # pkill "$dir"  # kills itself
        _fkill -q "$dir"

        eval "http-server $(echo "$dir" |sed -r 's| |\\ |g') -a 127.0.0.1 -p 9473 --cors='Access-Control-Allow-Origin: *'"
        # http-server "$(echo "$dir" |sed -r 's| |\\ |g')" -a 127.0.0.1 -p 9473 --cors='Access-Control-Allow-Origin: *'
        # http-server $(echo "$dir" |sed -r 's| |\\ |g') -a 127.0.0.1 -p 9473 --cors='Access-Control-Allow-Origin: *'
        ;;
    light)
        daytime="$2"
        case "$daytime" in
            day)      brightness 1.0  ;;
            twilight) brightness 0.75 ;;
            evening)  brightness 0.5  ;;
            night)    brightness 0.25 ;;
        esac
        if [ "$daytime" != "day" ] && at-home; then
            bulb "$daytime"
        fi
        ;;
    main)
        prev=""
        while :; do
            daytime="$($0 actual)"
            if [ "$daytime" != "$prev" ]; then
                $0 light "$daytime"

                bgs_file="$HOME/.temp/backgrounds.txt"
                touch "$bgs_file"
                # save cur bg
                if [ "$prev" != "" ]; then
                    sed -i "/^$prev:.*\$/d" "$bgs_file"
                    echo "$prev: $(get-background)" >> "$bgs_file"
                fi
                # set bg for current time-of-day
                bg="$(cat "$bgs_file" |grep -E "^$daytime:" |sed -r "s/^$daytime: (.*)$/\1/")"
                if [ "$bg" ]; then
                    set-background "$bg"
                fi

                prev="$daytime"
            fi
            sleep 1
        done
        ;;
    all)
        echo $($0 which) > "$daytime_file"
        parallel -n "
            $0 update
            $0 server
            $0 main
        "
        ;;
    help) echo "Options: day twilight evening night movie actual when which" ;;
    *) echo "Options: day twilight evening night movie actual when which update server light main all" >&2 ;;
esac

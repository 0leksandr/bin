#!/bin/sh
nr_args=$#
last_arg=""
all_or_nothing=""
on_exit_cmd=""

next_is_on_exit=""
for arg in "$@"; do
    if [ "$arg" = "-n" ]; then
        nr_args=$((nr_args - 1))
        all_or_nothing="-n"
    elif [ "$arg" = "-e" ]; then
        nr_args=$((nr_args - 2))
        next_is_on_exit=1
    elif [ "$next_is_on_exit" ]; then
        next_is_on_exit=""
        on_exit_cmd="$arg"
    else
        last_arg="$arg"
    fi
done

if [ $nr_args -eq 1 ]; then
    commands="$(echo "$last_arg" |sed -r 's/^ *#.*$//' |awk 'NF > 0' |sed -r "s ^.*\$ '\0' ")"
    if [ "$(echo "$commands" |wc -l)" -gt 1 ]; then
        cmd="$0 $all_or_nothing $(echo "$commands" |tr '\n' ' ')"

        # broken when $on_exit_cmd has spaces
        if [ "$on_exit_cmd" ]; then cmd="$cmd -e $on_exit_cmd"; fi
        eval "$cmd"

        # if [ "$on_exit_cmd" ]; then
        #     $("$cmd" -e "$on_exit_cmd")
        # else
        #     $("$cmd")
        # fi

        exit 1
    fi
fi

on_exit=""
list2wait=""

next_is_on_exit=""
for cmd in "$@"; do
    if [ "$cmd" = "-e" ]; then
        next_is_on_exit=1
    elif [ "$next_is_on_exit" ]; then
        next_is_on_exit=""
    elif [ "$cmd" != "-n" ]; then
        eval "$cmd" & pid=$!
        list2wait="$list2wait $pid"
        on_exit="$on_exit pkill -P $pid;"
        # on_exit="$on_exit kill -SIGINT $pid;"
    fi
done
on_exit="$on_exit $on_exit_cmd"

trap "$on_exit" INT TERM

if [ "$all_or_nothing" ]; then
    # bash -c "wait -n"
    while :; do
        for pid in $list2wait; do
            # if ! ps --pid="$pid" > /dev/null; then
            # if ! procx "$pid" > /dev/null; then  # too heavy
            if ! ps |grep -E -q "^ *$pid "; then
                eval "$on_exit"
                exit 1
            fi
        done

        # sleep 0.1
        sleep 1
    done
else
    wait $list2wait
fi

#!/bin/bash
set -e
_highlander

if [ "$1" != "background" ]; then
    $0 background "$@" &
    exit
fi
set -- "${@:2}"

alert='1'
if [ "$1" = "--noalert" ]; then
    alert=''
    set -- "${@:2}"
fi

file="$HOME/_/Programs/applets/text@nezhraba/texts/.shutdown"

#define shutdown time
if [ "$1" ]; then
    shutdowntime=$(date --date=$1 +%s ||:)
fi
now=$(date +%s)
if ! [ $shutdowntime ]; then
    shutdowntime=$(($now + 10))
fi
if [ $shutdowntime -le $now ]; then
    shutdowntime=$(date --date="tomorrow $1" +%s)
fi

timediff() {
    seconds=$(($2 - $1))
    minutes=$(($seconds / 60))
    seconds=$(($seconds -  $minutes * 60))
    hours=$(($minutes / 60))
    minutes=$(($minutes - $hours * 60))
    echo "$(printf '%02d:%02d:%02d' $hours $minutes $seconds)"
}
_say() {
    vol=100
    # if _external-display-connected; then vol=50; fi
    say "$1" text2wave "$vol" &
}

rm -f "$file"

alerted=''

while true; do
    cur=$(date +%s)

    # boot late after shutdowntime
    if [[ $cur -ge $(($shutdowntime + 30)) ]]; then
        shutdowntime=$(($cur + 60))
    fi

    # alert
    seconds_left=$(($shutdowntime - $cur))
    if [ "$alert" ]; then
        for minute in 1 2 3; do
            if [[ ( $seconds_left -le $(($minute * 60)) ) && ( "$alerted" = '' || $minute -lt $alerted ) ]]; then
                beep
                message="Shutdown in $minute minute"
                if [ $minute -ne 1 ]; then message="$message"s; fi
                alert "$message"
                _say "$message"
                alerted=$minute
            fi
        done
    fi
    if [ $seconds_left -le 10 ]; then
        _say $seconds_left
    fi

    # shutdown
    if [ $cur -ge $shutdowntime ]; then
        rm -f "$file"
        shutdown -P now
        break
    fi

    # write to widget
    limit1=$((60 * 60 * 2))
    if [ $# = 2 ] || [ $seconds_left -le $limit1 ]; then
        if [ $# = 2 ] && [ $2 != '+' ]; then
            starttime=$(date -d$2 +%s)
            timevalue=$(bc <<< "scale=1;($shutdowntime - $cur) * 2 / ($shutdowntime - $starttime)")
#            timevalue=$(printf %.1f $timevalue)
            countdown="$(timediff $starttime $cur) / $(timediff $cur $shutdowntime) $timevalue"
        else
            countdown=$(timediff $cur $shutdowntime)
        fi
        echo "$countdown" > "$file"
    fi

    sleep_seconds=10
    if [ $seconds_left -le $((limit1 + sleep_seconds)) ]; then
        sleep_seconds="$(echo "1 - 0.$(date +%N)" |bc)"
    fi
    sleep $sleep_seconds
done
